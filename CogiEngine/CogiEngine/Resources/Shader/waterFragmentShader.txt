#version 400 core

in vec4 _clipSpace;
in vec2 _textureCoords;

out vec4 out_Color;

uniform sampler2D _reflectionTexture;
uniform sampler2D _refractionTexture;
uniform sampler2D _dudvMap;
uniform float _moveFactor;

const float WAVE_STRENGTH = 0.02;

void main(void) {

    vec2 ndc = (_clipSpace.xy / _clipSpace.w) * 0.5 + 0.5;

    vec2 reflectionTexCoords = vec2(ndc.x, -ndc.y);
    vec2 refractionTexCoords = vec2(ndc.x, ndc.y);
    
    vec2 distortion1 = (texture(_dudvMap, vec2(_textureCoords.x + _moveFactor, _textureCoords.y)).rg * 2.0 - 1.0) * WAVE_STRENGTH;
    vec2 distortion2 = (texture(_dudvMap, vec2(-_textureCoords.x + _moveFactor, _textureCoords.y + _moveFactor)).rg * 2.0 - 1.0) * WAVE_STRENGTH;
    vec2 totalDistortion = distortion1 + distortion2;
    
    reflectionTexCoords += totalDistortion;
    reflectionTexCoords.x = clamp(reflectionTexCoords.x, 0.001, 0.999);
    reflectionTexCoords.y = clamp(reflectionTexCoords.y, -0.999, -0.001);
     
    refractionTexCoords += totalDistortion;
    refractionTexCoords = clamp(refractionTexCoords, 0.001, 0.999);


    vec4 reflectColor = texture(_reflectionTexture, reflectionTexCoords);
    vec4 refractColor = texture(_refractionTexture, refractionTexCoords);
    
	out_Color = mix(reflectColor, refractColor, 0.5);
	out_Color = mix(out_Color, vec4(0.0, 0.3, 0.5, 1.0), 0.2);
}