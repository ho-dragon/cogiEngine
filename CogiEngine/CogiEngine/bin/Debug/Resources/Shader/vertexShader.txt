#version 400 core

/* layout(location = 0) */ in vec3 _position;
/* layout(location = 1) */ in vec2 _textureCoords;
/* layout(location = 2) */ in vec3 _normal;

out vec2 _pass_textureCoords;
out vec3 _surfaceNormal;
out vec3 _toLightVector;
out vec3 _toCameraVector;

uniform mat4 _transformationMatrix;
uniform mat4 _projectionMatrix;
uniform mat4 _viewMatrix;
uniform vec3 _lightPosition;
uniform float _useFakeLighting;

void main(void)
{
    vec4 worldPosition = _transformationMatrix * vec4(_position, 1.0);
    gl_Position  = _projectionMatrix * _viewMatrix * worldPosition;
    _pass_textureCoords = _textureCoords;
    
    vec3 fakeNormal = _normal;
    if (_useFakeLighting > 0.5) {
        fakeNormal  = vec3(0.0, 1.0, 0.0); 
    }
    
    _surfaceNormal = (_transformationMatrix * vec4(fakeNormal, 0.0)).xyz;
    _toLightVector = _lightPosition - worldPosition.xyz;
    _toCameraVector = (inverse(_viewMatrix) * vec4(0.0, 0.0, 0.0, 1.0)).xyz - worldPosition.xyz;
}